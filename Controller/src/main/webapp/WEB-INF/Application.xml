<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <mvc:annotation-driven/>

    <context:component-scan base-package="com.flatstock"/>
    <mvc:resources mapping="/resources/**" location="/styles/"/>
    <mvc:resources mapping="/admin/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
    <mvc:resources mapping="/styles/main.css" location="/styles/"/>


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>
            </props>
        </property>
        <property name="annotatedClasses">
            <list>
                <value>com.flatstock.model.User</value>
                <value>com.flatstock.model.Apartment</value>
                <value>com.flatstock.model.Reservation</value>
            </list>
        </property>
    </bean>

    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/flatStock"/>
        <property name="username" value="postgres"/>
        <property name="password" value="tvtkz11"/>
    </bean>-->

    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['FLATSTOCK_URL']}"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath() }"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userService" class="com.flatstock.service.impl.UserServiceImpl"></bean>
    <bean id="apartmentService" class="com.flatstock.service.impl.ApartmentServiceImpl"></bean>
    <bean id="apartmentReservation" class="com.flatstock.service.impl.ReservationServiceImpl"></bean>

    <bean id="userRepository" class="com.flatstock.repository.UserRepository">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="apartmentsRepository" class="com.flatstock.repository.ApartmentsRepository">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="reservationsRepository" class="com.flatstock.repository.ReservationRepository">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="com.flatstock.model.Gender" value="com.flatstock.converter.GenderEnumConverter" />
                <entry key="com.flatstock.model.Role" value="com.flatstock.converter.RoleEnumConverter" />
                <entry key="com.flatstock.model.User" value="com.flatstock.converter.UserConverter" />
                <entry key="com.flatstock.model.Apartment" value="com.flatstock.converter.ApartmentsConverter" />
            </map>
        </property>
    </bean>

    <bean id="userDetailsDBProvider" class="com.flatstock.security.UserDetailsDBProvider"></bean>

    <security:http auto-config="true" use-expressions="true">
        <!--<security:intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMINISTRATOR')"/>-->
        <security:intercept-url pattern="/owner/*" access="hasRole('ROLE_OWNER')"/>
        <security:intercept-url pattern="/customer/*" access="hasRole('ROLE_CUSTOMER')"/>
        <security:logout invalidate-session="true" logout-url="/logout" />
        <security:csrf />
    </security:http>



    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsDBProvider"/>
    </security:authentication-manager>

</beans>